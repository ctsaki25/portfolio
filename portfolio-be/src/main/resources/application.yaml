server:
  port: ${BACKEND_PORT}
  error:
    include-message: always

logging:
  level:
    root: INFO
    org.springframework: INFO
    com.portfolio: DEBUG
    de.flapdoodle.embed.mongo: INFO

jwt:
  secret: ${JWT_SECRET:b3976f61e72ffb62efd71c428ad7ecea1669b96c64cad61859b94d5cfa4a8d5f}
  validity: 86400000  # 24 hours in milliseconds

admin:
  username: ${ADMIN_USERNAME:tonynearos444}
  password: ${ADMIN_PASSWORD:d3nbl3k0m3b@t$0us}

spring:
  data:
    mongodb:
      database: portfolio
      auto-index-creation: true
      connection-pool:
        max-size: 100
        min-size: 5
        max-wait-time: 2000
        max-connection-life-time: 30000
  mongodb:
    embedded:
      version: 8.0.0
      storage:
        oplog-size: 10
        repl-set-name: rs0
        database-dir: ./data/mongodb
      daemon: true
      features:
        disable-in-memory: false
        only-with-ssl: false
      args:
        - --storageEngine=wiredTiger
        - --wiredTigerCacheSizeGB=0.25
        - --wiredTigerJournalCompressor=snappy
        - --setParameter=maxTransactionLockRequestTimeoutMillis=1000
        - --setParameter=transactionLifetimeLimitSeconds=60

de:
  flapdoodle:
    mongodb:
      embedded:
        version: 8.0.0
        storage:
          database-dir: ./data/mongodb
          oplog-size: 50
          repl-set-name: rs0

portfolio:
  frontend:
    url: ${FRONTEND_URL}

#spring:
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri: ${OKTA_ISSUER}
#          jwk-set-uri: ${OKTA_ISSUER}.well-known/jwks.json
#      client:
#        registration:
#          okta:
#            client-id: ${OKTA_CLIENT_ID}
#            client-secret: ${OKTA_CLIENT_SECRET}
#            client-authentication-method: client_secret_basic
#            authorization-grant-type: authorization_code
#            scope: openid,profile,email
#        provider:
#          okta:
#            issuer-uri: ${OKTA_ISSUER}

---

spring:
  config:
    activate:
      on-profile: docker
  autoconfigure:
    exclude: de.flapdoodle.embed.mongo.spring.autoconfigure.EmbeddedMongoAutoConfiguration
  data:
    mongodb:
      host: mongo
      port: ${MONGO_PORT}
      database: ${MONGO_DATABASE}
      username: ${MONGO_ROOT_USER}
      password: ${MONGO_ROOT_PASS}
      authentication-database: admin
  security:
    oauth2:
      client:
        registration:
          auth0:
            client-id: ${AUTH0_CLIENT_ID}
            client-secret: ${AUTH0_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
        provider:
          auth0:
            issuer-uri: https://${AUTH0_DOMAIN}/